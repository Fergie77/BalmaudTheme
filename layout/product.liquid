<!doctype html>
<html data-wf-page="66df6af1ce9de388f55cc331" data-wf-site="66df6af1ce9de388f55cc2bf" lang="{{ request.locale.iso_code }}">
<head>
  <meta charset="utf-8">
  <title>{{ page_title }}</title>
  <meta content="{{ page_description }}" name="description">
  <meta content="{{ page_title }}" property="og:title">
  <meta content="{{ page_description }}" property="og:description">
  <meta content="{{ page_title }}" property="twitter:title">
  <meta content="{{ page_description }}" property="twitter:description">
  <meta property="og:type" content="website">
  <meta content="summary_large_image" name="twitter:card">
  <meta content="width=device-width, initial-scale=1" name="viewport">
  <meta content="Webflow" name="generator">
  <link href="{{ 'normalize.css' | asset_url }}" rel="stylesheet" type="text/css">
  <link href="{{ 'webflow.css' | asset_url }}" rel="stylesheet" type="text/css">
  <link href="{{ 'liquifytesting.webflow.css' | asset_url }}" rel="stylesheet" type="text/css">
  <script type="text/javascript">!function(o,c){var n=c.documentElement,t=" w-mod-";n.className+=t+"js",("ontouchstart"in o||o.DocumentTouch&&c instanceof DocumentTouch)&&(n.className+=t+"touch")}(window,document);</script>
  
            {% if settings.favicon == blank %}
              <link href="{{ 'favicon.png' | asset_url }}" rel="shortcut icon" type="image/x-icon">
            {% else %}
              <link rel="shortcut icon" type="image/png" href="{{ settings.favicon | img_url: '32x32' }}">
            {% endif %}
        
  
            {% if settings.apple_touch_icon == blank %}
              <link href="{{ 'webclip.png' | asset_url }}" rel="apple-touch-icon">
            {% else %}
              <link rel="apple-touch-icon" type="image/png" href="{{ settings.apple_touch_icon | img_url: '32x32' }}">
            {% endif %}
        
  <script defer="" src="{{ 'alpinejs3.js' | asset_url }}"></script>
  <script defer="" auto="" min="" src="https://cdn.jsdelivr.net/gh/liquify-pro/core@latest/script.js"></script>
  <link href="{{ canonical_url }}" rel="canonical">
  <style>
  [x-cloak] { display: none !important; }
  [li-cloak_disabled] { display: none !important; }
/* Setup Font and Background Color if Text is selected */
::selection {
  color: #fff;
  background: #E91B7F;
}
::-moz-selection {
  color: #fff;
  background: #E91B7F;
}
</style>
  <meta name="theme-color" content="#000" media="(prefers-color-scheme: light)">
  <meta name="theme-color" content="#fff" media="(prefers-color-scheme: dark)">
  <!-- 
<script>
(function () {
    const LOCALHOST_URL = [
    	'http://localhost:5173/@vite/client',
      'http://localhost:5173/src/main.js',
    ]
    const PROD_URL = ['https://parallelcoffee.netlify.app/main.js']
    function createScripts(arr, isDevMode) {
      return arr.map(function (url) {
        const s = document.createElement('script')
        s.src = url
        if (isDevMode) {
          s.type = 'module'
        }
        return s
      })
    }
    function insertScript(scriptArr) {
      scriptArr.forEach(function (script) {
        document.head.appendChild(script)
      })
    }
    const localhostScripts = createScripts(LOCALHOST_URL, true)
    const prodScripts = createScripts(PROD_URL, true)
    let choosedScripts = null
    fetch(LOCALHOST_URL[0], {})
      .then(() => {
        choosedScripts = localhostScripts
      })
      .catch((e) => {
        choosedScripts = prodScripts
        console.error(e)
      })
      .finally(() => {
        if (choosedScripts) {
          insertScript(choosedScripts)
          return
        }
        console.error('something went wrong, no scripts loaded')
      })
  })() 
</script>
 -->
  <script src="https://testparallel.myshopify.com/cdn/shop/t/38/assets/liquify_custom.js?v=99708878005376017301728214743" type="text/javascript"></script>
  <!-- Flowdrive v0.1.0 -->
  <script data-fd-id="397c1e3217d2747399cc" src="https://files.tryflowdrive.com/index.min.js"></script>
  <link rel="stylesheet" href="https://files.tryflowdrive.com/427/file-4f313478-cba0-4363-ac3c-137165ff2db7_odometer-theme-default.css">
  <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Product",
        "name": "{{ product.title }}",
       "image": "https:{{ product.featured_image.src | img_url: '1500x1500' }}",
        "description": "{{ product.description | strip_html }}",
        "brand": "{{ product.vendor }}",
        "sku": "{{ product.selected_or_first_available_variant.sku }}",
        "offers": [
        {% for variant in product.variants %}{
          "@type": "Offer",
          "url": "{{ variant.url }}",
          "priceCurrency": "EUR",
          "price": "{{ variant.price | money }}",
      "priceValidUntil": "{{ 'now' | date: '%s' | plus: 31536000 | date: '%Y-%m-%d' | uri_encode | replace:'+','%20' }}",
          "availability": "{% if variant.available %}https://schema.org/InStock{% else variant.available == false %}https://schema.org/SoldOut{% endif %}",
          "itemCondition": "https://schema.org/NewCondition"
        }{% if forloop.last == false %},{% endif %}{% endfor %}
        ]
        }
    </script>
  <script type="application/ld+json">
      {
         "@context": "https://schema.org",
         "@type": "BreadcrumbList",
         "itemListElement":
         [
          {
           "@type": "ListItem",
           "position": 1,
           "item":
           {
            "@id": "{{ shop.url }}",
            "name": "Home"
            }
          },
        {
           "@type": "ListItem",
           "position": 2,
           "item":
           {
            "@id": "{% if collection.url %}{{ collection.url }}{% else %}{{ product.vendor }}{% endif %}",
            "name": "{% if collection.url %}{{collection.title }}{% else %}{{ product.vendor }}{% endif %}"
            }
          },
          {
           "@type": "ListItem",
          "position": 3,
          "item":
           {
             "@id": "{{ product.url }}",
             "name": "{{ product.title }}"
           }
          }
         ]
        }
    </script>
  <script type="application/ld+json">
      {
          "@context": "https://schema.org",
          "@type": "FAQPage",
          "mainEntity": [{% for fa_qs in shop.metaobjects.fa_qs.values %}{
            "@type": "Question",
            "name": "{{ fa_qs.frage }}",
            "acceptedAnswer": {
              "@type": "Answer",
              "text": "{{ fa_qs.antwort | metafield_tag | strip_html }}"
            }
          }{% if forloop.last == false %},{% endif %}{% endfor %}
          ]
        }
    </script>
<script src="{{ 'li_helper.js' | asset_url }}" type="text/javascript"></script>{{ content_for_header }}</head>
<body li-page="product">
  <div data-barba="wrapper" class="page-wrapper">
    {% render 'global_styles' %}
    {% section 'header' %}
    <div data-barba-namespace="product" data-barba="container" class="barba-container">
      {{ content_for_layout }}
      {% section 'footer' %}
    </div>
  </div>
  <script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=66df6af1ce9de388f55cc2bf" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
  <script src="{{ 'webflow.js' | asset_url }}" type="text/javascript"></script>
  {% render 'search_javascript' %}
  <script>
(function () {
    const LOCALHOST_URL = [
    	'http://localhost:5173/@vite/client',
      'http://localhost:5173/src/main.js',
    ]
    const PROD_URL = ['https://parallelcoffee.netlify.app/main.js']
    function createScripts(arr, isDevMode) {
      return arr.map(function (url) {
        const s = document.createElement('script')
        s.src = url
        if (isDevMode) {
          s.type = 'module'
        }
        return s
      })
    }
    function insertScript(scriptArr) {
      scriptArr.forEach(function (script) {
        document.head.appendChild(script)
      })
    }
    const localhostScripts = createScripts(LOCALHOST_URL, true)
    const prodScripts = createScripts(PROD_URL, false)
    let choosedScripts = null
    fetch(LOCALHOST_URL[0], {})
      .then(() => {
        choosedScripts = localhostScripts
      })
      .catch((e) => {
        choosedScripts = prodScripts
        console.error(e)
      })
      .finally(() => {
        if (choosedScripts) {
          insertScript(choosedScripts)
          return
        }
        console.error('something went wrong, no scripts loaded')
      })
  })() 
</script>
  <!-- <script src = "https://parallelcoffee.netlify.app/main.js"></script>
 -->
  <style>
.page-mask{
opacity: 100;
}
</style>
  <script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>
  <script>
  $(".swiper-container").each(function (index) {
    const thumbsSwiper = new Swiper($(this).find(".swiper.is-product-thumbnail")[0], {
      slidesPerView: "auto",
      rewind: false,
      loopedSlides: 8,
      slideToClickedSlide: true,
      spaceBetween: "4%",
    });
    const swiper = new Swiper($(this).find(".swiper.is-product-gallery")[0], {
      mousewheel: {
        forceToAxis: true
      },
      thumbs: {
        swiper: thumbsSwiper,
        slideThumbActiveClass: "is-active",
      },
      keyboard: {
        enabled: true,
        onlyInViewport: true
      },
      navigation: {
        nextEl: $(this).find(".swiper-next")[0],
        prevEl: $(this).find(".swiper-prev")[0],
      }
    });
  }); 
</script>
  <script>
  document.addEventListener('DOMContentLoaded', function() {
    const productRecommendationsSection = document.querySelector('.product-recommendations');
    const url = productRecommendationsSection.dataset.url;
    fetch(url)
      .then(response => response.text())
      .then(text => {
      const html = document.createElement('div');
      html.innerHTML = text;
      const recommendations = html.querySelector('.product-recommendations');
      if (recommendations && recommendations.innerHTML.trim().length) {
        productRecommendationsSection.innerHTML = recommendations.innerHTML;
      }
    })
      .catch(e => {
      console.error(e);
    });
  });
</script>
</body>
</html>